AC_PREREQ(2.61)
AC_INIT(vaedb, 20150520, info@actionverb.com)
AC_CONFIG_SRCDIR([context.cpp])
AC_CONFIG_HEADER([config.h])

m4_include([aclocal/ax_boost_base.m4])
m4_include([aclocal/ax_cxx_check_lib.m4])

AC_PROG_CXX
AC_PROG_CC
AC_PATH_PROG([XML2_CONFIG], [xml2-config], AC_MSG_ERROR(could not find libxml2))

AX_BOOST_BASE
AC_CHECK_LIB([zmq], [zmq_socket], [], [AC_MSG_ERROR([Could not find usable ZMQ library])], [])
AC_CHECK_LIB([thrift], [main], , AC_MSG_ERROR(could not find libthrift))
AC_CHECK_LIB([s3], [S3_initialize], , AC_MSG_ERROR(could not find libs3))
AC_CHECK_LIB([memcached], [memcached_get], , AC_MSG_ERROR(could not find memcached library))

AC_LANG_PUSH([C++])

AX_CXX_CHECK_LIB([boost_system-mt],[boost::system::generic_category()],[BOOST_LIB_SUFFIX="-mt"],[BOOST_LIB_SUFFIX=""])
AX_CXX_CHECK_LIB([mysqlcppconn],[sql::mysql::get_driver_instance()],[],[AC_MSG_ERROR([mysqlcppconn not found])])
AC_CHECK_LIB([pcrecpp], [main], [], [AC_MSG_ERROR([pcre not found])])

AC_LANG_POP([C++])

AC_SUBST(BOOST_LIB_SUFFIX)

AC_HEADER_STDBOOL
AC_C_CONST
AC_TYPE_INT32_T
AC_TYPE_INT8_T

AC_FUNC_MALLOC
AC_CHECK_FUNCS([strcasecmp strstr])

AC_CONFIG_FILES([Makefile])
AC_OUTPUT
